kind: ConfigMap
apiVersion: v1
metadata: # kpt-merge: kube-system/cni-install-sh
  name: cni-install-sh
  namespace: kube-system
  annotations:
    internal.kpt.dev/upstream-identifier: '|ConfigMap|kube-system|cni-install-sh'
data:
  install_cni.sh: |
    cd /tmp
    wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
    cd /host/opt/cni/bin
    tar xvfzp /tmp/cni-plugins-linux-amd64-v1.1.1.tgz
    sleep infinite
---
apiVersion: apps/v1
kind: DaemonSet
metadata: # kpt-merge: kube-system/install-cni-plugins
  name: install-cni-plugins
  namespace: kube-system
  labels:
    name: cni-plugins
  annotations:
    internal.kpt.dev/upstream-identifier: 'apps|DaemonSet|kube-system|install-cni-plugins'
spec:
  selector:
    matchLabels:
      name: cni-plugins
  template:
    metadata:
      labels:
        name: cni-plugins
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - operator: Exists
        effect: NoSchedule
      containers:
      - name: install-cni-plugins
        image: alpine
        command: ["/bin/sh", "/scripts/install_cni.sh"]
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        volumeMounts:
        - name: cni-bin
          mountPath: /host/opt/cni/bin
        - name: scripts
          mountPath: /scripts
      volumes:
      - name: cni-bin
        hostPath:
          path: /opt/cni/bin
      - name: scripts
        configMap:
          name: cni-install-sh
          items:
          - key: install_cni.sh
            path: install_cni.sh
